<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace></robotNamespace>
            <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
        </plugin>
    </gazebo>

    <gazebo>
        <plugin name="planar_controller" filename="libgazebo_ros_planar_move.so">
            <commandTopic>cmd_vel</commandTopic>
            <odometryTopic>odom</odometryTopic>
            <odometryFrame>odom</odometryFrame>
            <odometryRate>30.0</odometryRate>
            <robotBaseFrame>base_footprint</robotBaseFrame>
        </plugin>
    </gazebo>

    <gazebo reference="base_link">
        <mu1 value="0.0"/>
        <mu2 value="0.0"/>
    </gazebo>

    <xacro:macro name="insert_hokuyo_sensor" params="name">
        <gazebo reference="${name}_hokuyo_link">
            <sensor type="ray" name="${name}_hokuyo_sensor">
                <pose>0 0 0 0 0 0</pose>
                <visualize>true</visualize>
                <update_rate>30</update_rate>
                <ray>
                    <scan>
                        <horizontal>
                            <samples>720</samples>
                            <resolution>1</resolution>
                            <min_angle>-1.5707</min_angle>
                            <max_angle>1.5707</max_angle>
                        </horizontal>
                    </scan>
                    <range>
                        <min>0.15</min>
                        <max>30.0</max>
                        <resolution>0.01</resolution>
                    </range>
                    <noise>
                        <type>gaussian</type>
                        <!-- Noise parameters based on published spec for Hokuyo laser
                            achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
                            stddev of 0.01m will put 99.7% of samples within 0.03m of the true
                            reading. -->
                        <mean>0.0</mean>
                        <stddev>0.01</stddev>
                    </noise>
                </ray>
                <plugin name="gazebo_hokuyo_controller" filename="libgazebo_ros_laser.so">
                    <topicName>${name}/scan</topicName>
                    <frameName>${name}_hokuyo_link</frameName>
                </plugin>
            </sensor>
        </gazebo>
    </xacro:macro>

    <xacro:macro name="insert_camera_sensor" params="name">
        <gazebo reference="${name}">
            <sensor type="camera" name="${name}">
                <update_rate>30.0</update_rate>
                <camera name="head">
                    <horizontal_fov>1.3962634</horizontal_fov>
                    <image>
                        <width>800</width>
                        <height>800</height>
                        <format>R8G8B8</format>
                    </image>
                    <clip>
                        <near>0.02</near>
                        <far>300</far>
                    </clip>
                    <noise>
                        <type>gaussian</type>
                        <!-- Noise is sampled independently per pixel on each frame.
                            That pixel's noise value is added to each of its color
                            channels, which at that point lie in the range [0,1]. -->
                        <mean>0.0</mean>
                        <stddev>0.007</stddev>
                    </noise>
                </camera>
                <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                    <alwaysOn>true</alwaysOn>
                    <updateRate>0.0</updateRate>
                    <cameraName>${name}</cameraName>
                    <imageTopicName>image_raw</imageTopicName>
                    <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                    <frameName>${name}</frameName>
                    <hackBaseline>0.07</hackBaseline>
                    <distortionK1>0.0</distortionK1>
                    <distortionK2>0.0</distortionK2>
                    <distortionK3>0.0</distortionK3>
                    <distortionT1>0.0</distortionT1>
                    <distortionT2>0.0</distortionT2>
                </plugin>
            </sensor>
        </gazebo>
    </xacro:macro>

    <xacro:macro name="insert_rgbd_camera_sensor" params="name">
        <gazebo reference="${name}_link">
            <sensor type="depth" name="${name}">
                <always_on>true</always_on>
                <update_rate>30.0</update_rate>
                <camera>
                    <horizontal_fov>${60.0*pi/180.0}</horizontal_fov>
                    <image>
                        <format>R8G8B8</format>
                        <width>640</width>
                        <height>480</height>
                    </image>
                    <clip>
                        <near>0.05</near>
                        <far>8.0</far>
                    </clip>
                </camera>

                <plugin name="kinect_camera_controller" filename="libgazebo_ros_openni_kinect.so">
                    <cameraName>${name}</cameraName>
                    <alwaysOn>true</alwaysOn>
                    <updateRate>30</updateRate>
                    <imageTopicName>rgb/image_raw</imageTopicName>
                    <depthImageTopicName>depth_registered/image_raw</depthImageTopicName>
                    <pointCloudTopicName>depth_registered/points</pointCloudTopicName>
                    <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
                    <depthImageCameraInfoTopicName>depth_registered/camera_info</depthImageCameraInfoTopicName>
                    <frameName>${name}_depth_optical_frame</frameName>
                    <baseline>0.1</baseline>
                    <distortion_k1>0.0</distortion_k1>
                    <distortion_k2>0.0</distortion_k2>
                    <distortion_k3>0.0</distortion_k3>
                    <distortion_t1>0.0</distortion_t1>
                    <distortion_t2>0.0</distortion_t2>
                    <pointCloudCutoff>0.4</pointCloudCutoff>
                </plugin>
            </sensor>
        </gazebo>
    </xacro:macro>
</robot>